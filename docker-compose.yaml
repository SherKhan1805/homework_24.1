version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_PASSWORD: ${DATABASES_PASSWORD}
      POSTGRES_USER: ${DATABASES_USER}
      POSTGRES_DB: ${DATABASES_NAME}
    volumes:
    - pg_data:/var/lib/postgresql/data/

    healthcheck:
      test: pg_isready -d ${DATABASES_NAME} -U ${DATABASES_USER}
      interval: 2s
      timeout: 2s
      retries: 10

  app_migrations:
    build: .
    env_file: .env
    environment:
      DATABASE_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: poetry run python manage.py migrate

  app:
    build: .
    ports:
      - '8000:8000'
    env_file: .env
    environment:
      DATABASE_HOST: db
      CACHE_LOCATION: 'redis://redis:6379/'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      app_migrations:
        condition: service_completed_successfully

  redis:
    image: redis:6.2.4-alpine
    healthcheck:
      test: redis-cli ping
      interval: 2s
      timeout: 2s
      retries: 10

  celery:
    build: .
    env_file: .env
    environment:
      DATABASE_HOST: db
      CACHE_LOCATION: 'redis://redis:6379/0'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      app_migrations:
        condition: service_completed_successfully
    command: poetry run celery -A config worker -l INFO

volumes:
  pg_data: